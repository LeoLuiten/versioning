name: Trigger the creation of Release Branch for each repository

env:
  VERSIONING_REPO_URL: "https://api.github.com/repos/LeoLuiten/versioning"
  VERSION_FILE: "versioning.json"
  GITHUB_TOKEN: ${{ secrets.supertoken }}
  TARGET_BRANCH: "development"

on:
  workflow_dispatch:

jobs:
  create-release-branch:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Install necessary tools
      - name: Install jq
        run: sudo apt-get install -y jq

      # Fetch and parse JSON
      - name: Fetch and Parse Versioning JSON
        run: |
          # Fetch the current versioning.json
          CURRENT_CONTENT=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "$VERSIONING_REPO_URL/contents/$VERSION_FILE?ref=Lisa")

          echo "API Response: $CURRENT_CONTENT"

          # Validate the API response
          if [[ $? -ne 0 || -z "$CURRENT_CONTENT" ]]; then
              echo "Failed to fetch the versioning.json. Exiting."
              exit 1
          fi

          ENCODED_CONTENT=$(echo "$CURRENT_CONTENT" | jq -r '.content')
          if [[ -z "$ENCODED_CONTENT" || "$ENCODED_CONTENT" == "null" ]]; then
              echo "Failed to extract content. Exiting."
              exit 1
          fi

          # Decode and parse JSON
          CURRENT_JSON=$(echo "$ENCODED_CONTENT" | base64 --decode)
          echo "Decoded JSON: $CURRENT_JSON"

          NEXT_VERSION=$(echo "$CURRENT_JSON" | jq -r '.environments.development.nextVersion')
          if [[ -z "$NEXT_VERSION" || "$NEXT_VERSION" == "null" ]]; then
              echo "Failed to extract next version. Exiting."
              exit 1
          fi

          REPO1_LAST_HASH=$(echo "$CURRENT_JSON" | jq -r '.environments.development.previousReleases[0].repo1.lastHash')
          REPO2_LAST_HASH=$(echo "$CURRENT_JSON" | jq -r '.environments.development.previousReleases[0].repo2.lastHash')
          REPO3_LAST_HASH=$(echo "$CURRENT_JSON" | jq -r '.environments.development.previousReleases[0].repo3.lastHash')

          if [[ -z "$REPO1_LAST_HASH" || -z "$REPO2_LAST_HASH" || -z "$REPO3_LAST_HASH" ]]; then
              echo "Failed to extract last hashes. Exiting."
              exit 1
          fi

          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV
          echo "REPO1_LAST_HASH=$REPO1_LAST_HASH" >> $GITHUB_ENV
          echo "REPO2_LAST_HASH=$REPO2_LAST_HASH" >> $GITHUB_ENV
          echo "REPO3_LAST_HASH=$REPO3_LAST_HASH" >> $GITHUB_ENV

      # Trigger release branch creation workflows
      - name: Call Release Branch Creation on Multiple Repositories
        env:
          GITHUB_TOKEN: ${{ secrets.supertoken }}
        run: |
          REPOS=(
            "https://api.github.com/repos/LeoLuiten/repo1"
            "https://api.github.com/repos/LeoLuiten/repo2"
            "https://api.github.com/repos/LeoLuiten/repo3"
          )

          START_REFS=(
            "$REPO1_LAST_HASH"
            "$REPO2_LAST_HASH"
            "$REPO3_LAST_HASH"
          )

          for i in "${!REPOS[@]}"; do
            REPO="${REPOS[$i]}"
            START_REF="${START_REFS[$i]}"

            echo "Triggering release branch creation for $REPO with start ref $START_REF"

            RESPONSE=$(curl -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "$REPO/actions/workflows/create-release-branch.yml/dispatches" \
              -d "{\"ref\": \"$TARGET_BRANCH\", \"inputs\": {\"next_version\": \"$NEXT_VERSION\", \"start_ref\": \"$START_REF\"}}")

            if [[ $? -ne 0 ]]; then
              echo "Failed to trigger workflow for $REPO"
              exit 1
            fi

            echo "Response for $REPO: $RESPONSE"
          done

